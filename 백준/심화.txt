#2444 별 찍기
# 출력형식이 왜 잘못???
a= int(input())
for i in range(a):
    void=" "*(a-i-1)
    star="*"*(2*i+1)
    print(void,star)
for j in range(a-1):
    void=" "*(j+1)
    star="*"*(a*2-1-2-2*j)
    print( void,star)
# 위에 것은 하나가 띄어진 상태로 만들어짐
# 아래는 안 띄어짐
a= int(input())
for i in range(a):
    void=" "*(a-i-1)
    star="*"*(2*i+1)
    print(" "*(a-i-1) + "*"*(2*i+1))
for j in range(a-1):
    void=" "*(j+1)
    star="*"*(a*2-1-2-2*j)
    print( " "*(j) ,"*"*(a*2-1-2-2*j))


n = int(input())
for i in range(1, n):
    print(' '*(n-i) + '*'*(2*i-1))
for i in range(n, 0, -1):
    print(' '*(n-i) + '*'*(2*i-1))




#10988  팰린드롬인지 확인하기
#내가한 것
a = input()
L_a=[]
L_a_re=[]
for i in a:
    L_a.append(i)
for i in range(-1,-len(a)-1,-1):
    L_a_re.append(a[i])
"""  그냥 넘어간다.
for i in range(0,len(a),-1):
    L_a_re.append(a[i])
"""
if L_a == L_a_re:
    print(1)
else:
    print(0)

                    # 인터넷에 나온 답
word = list(str(input()))
word1= reversed(word)     #이상하게 나옴
word2= list(reversed(word))# 깔끔한 리스트형으로
if list(reversed(word)) == word:
    print(1)
else:
    print(0)


#1157   단어 공부
a= str(input())
a_up= a.upper()
L= ["Q","W","E","R","T","Y","U","I","O","P","A","S","D","F","G","H","J","K","L","Z","X","C","V","B","N","M"]
Lresult=[]
for i in L:
    Lresult.append(a_up.count(i))
result=max(Lresult)
real=[]
for i in range(len(L)):
    if Lresult[i]==result:
        real.append(L[i])
if len(real)!=1:
    print("?")
else:
    print(real[0])


# 크로아티아 알파벳
#replace는 return이다.
a= str(input())
a=a.replace("c=","ㄱ")
a=a.replace("c-","ㄴ")
a=a.replace("dz=","ㄷ")
a=a.replace("d-","ㄹ")
a=a.replace("lj","ㅁ")
a=a.replace("nj","ㅂ")
a=a.replace("s=","ㅅ")
a=a.replace("z=","ㅈ")
print(len(a))



#1316 그룹단어 체커
"""
1. set으로 바꾸어 있는 단어를 찾기
2. 반복해서 if 그 문자가 아니면 0을 자리가 맞다면 1을 넣은 
list 만들기
3. 
"""
a= int(input())
answer_num=0 # 반복문 안에 넣지 않기
for i in range(a):
    a_str= str(input())
    a_str_list= list(a_str)
    a_str_set=set(a_str_list)
    L_num=[]
    for j in a_str_set:
        if a_str.count(j)>1:
            # 특정 문자 find로 시작점 찾고, count로
            # 그것을 길이라고 생각하면, scope사용[ㅁ:ㅁ+len]
            # set으로 바꾸고 그것의 길이가 1초가면 연속 아님
            start_point= a_str.find(j)
            len_str= a_str.count(j)
            answer=set(a_str_list[start_point:len_str+start_point])
            if len(answer)>1:
                break
            else:
                pass
        else:
            pass# 바뀜점 2개의 for중에서 하나를 삭제했다.
    else:
        answer_num+=1
print(answer_num)


*************************************************
#25206    너의 평점은??
full_score=0
full_each=0
while True:
    try:
        name, each, score = input().split()
        each = int(float(each))
        if score == "A+":
            score=4.5
        elif score == "A0":
            score=4.0
        elif score == "B+":
            score=3.5
        elif score == "B0":
            score=3.0
        elif score == "C+":
            score=2.5
        elif score == "C0":
            score=2.0
        elif score == "D+":
            score=1.5
        elif score == "D0":
            score=1.0
        elif score == "F":
            score=0.0
        elif score =="P":
            raise TypeError# 바로 Error로 가게 한다.
                            # 기존엔 바로 break을 했더니
        full_each+=each     
        full_score+=each*score #"P"가 score로 내려와서 에러나옴.
    except ValueError:# 아무것도 쓰지 않을때
        break           " 이거 없어도 됨."
    except EOFError: # 다음에 적는 것이 없을 때
        break
    except TypeError: # P가 있을 때 숫자만 가능한 계산에서
                        #str이 나온 형국이다.
        pass
print(full_score/full_each)

# float 끼리의 계산은 가능하지 않다.