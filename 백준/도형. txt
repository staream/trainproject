#1085
# 코멘트 : 때론 조건을 없애고 노가다로 푸는 것도 방법이다.
y_list=[]
x,y,L,H=map(int,input().split())
y_list.append(H-y)
y_list.append(y)
y_list.append(x)
y_list.append(L-x)
y_list.sort()
print(y_list[0])


r = list(map(int,input().split()))
r[2]-=r[0]
r[3]-=r[1]
print(min(r))


#######3009번
a=[]
for i in range(3):
    a.append(list(map(int,input().split())))
r_0=[]
r_1=[]
r=[]
for i in a:
    r_0.append(i[0])
for i in r_0:
    if r_0.count(i)==1:
        r.append(i)
for j in a:
    r_1.append(j[1])
for j in r_1:
    if r_1.count(j)==1:
        r.append(j)
for k in r:
    print(k, end=" ")

조건을 2의 나머지인 홀수의 개수를 가지고 있다는 조건을 이용하면
내용이 좀 줄어들지 않을까?
1. 변수가 많다.
2. 반복되는 반복문
2의 해결 range(2)를 이용해서 바로 구한다면 괜찮지 않을까?
while을 이용한 list 변수 초기화 get it???

#15984 겉에 있는 둘레의 길이 구하기
a= int(input())
total=4*a


#9063
# 코멘트
###########
    # map 객체는 subscriptable하지 않다고 한다.
    # 위에서 list화 시켜서 가능하게 함.
# 가로 길이
a= int(input())
L=[]
for i in range(a):
    L.append(list(map(int,input().split())))
if len(L)==1:
    print(0)
else:    
    L_x,L_y=[],[]
    for i in range(a):
        L_x.append(L[i][0])
        L_y.append(L[i][1])
    # map 객체는 subscriptable하지 않다고 한다.
    # 위에서 list화 시켜서 가능하게 함.
    re_x=max(L_x)-min(L_x)
    re_y=max(L_y)-min(L_y)
    print(re_x*re_y)

# 10101
#코멘트
setsetsetsetsetsetsetsetset
setsetsetsetsetsetsetsetset
setsetsetsetsetsetsetsetset
# 크기에서 같은 것을 비교시 list의 sort나 set을 이용해봐라
# set이 훨씬 편할 듯 길이가 같으면 길이가 1
다른 길이가 있어 2이면 이등변
아예다르면 3이다.
물론 그 전에 sum을 이용해서 하면 좋을 듯
tri_L=[]
for i in range(3):
    tri_L.append(int(input()))
if sum(tri_L)!= 180:
    print("Error")
else:
    tri_L.sort()
    if max(tri_L)==60:
        print("Equilateral")
    elif tri_L[0]==tri_L[1] or tri_L[1]==tri_L[2]:
        print("Isosceles")
    else:
        print("Scalene")

#### 5073
# Error
IndexError: list index out of range


while True:
    a= list(map(int,input().split()))
    if a==[0,0,0]:
        break
    else:
        b=set(a)
        a.sort()
        if a[0]+a[1]<=a[2]:
            print("Invalid")
        else:
            if len(b)==1:
                print("Equilateral")
            elif len(b)==2:
                print("Isosceles")
            else:
                print("Scalene")


###### 14215
### 세 막대
# 힘든 점 여러 케이스가 존재했다. 길이가 더 긴 경우, 짧은
경우를 고려하지 않아서 힘들었음.
a= list(map(int,input().split()))
a.sort()
if len(set(a)) ==3:
    if a[2]>=a[0]+a[1]:
        a[2]=a[0]+a[1]-1
        print(sum(a))
    elif a[2]<a[0]+a[1]:
        print(sum(a))
elif len(set(a))==2:
    if a[2]==a[1]:
        print(sum(a))
    elif a[1]==a[0]:
        if 2*a[0]<=a[2]:
            a[2]=a[0]*2-1
            print(sum(a))
        elif a[0]*2>a[2]:
            print(sum(a))
else:
    result=3*a[0]
    print(result)