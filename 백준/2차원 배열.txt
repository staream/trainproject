#2738 행렬에 대한

# 새로운 개념 list compresion
a= "1 1 1"
a= int(a.split())           # 불가능
b =a.split()                # list 형태로 나타난다.
L.append(a.split())
print(L)

N,M = map(int,input().split())
L1=[]
L2=[]
L3=[]
for i in range(N):
    a=input()
    L1.append(a.split())
    L3.append(a.split())
for i in range(N):
    a= input()
    L2.append(a.split())
for i in range(N):
    for j in range(M):
        L3[i][j]=str(int(L1[i][j])+int(L2[i][j]))
        #append 는 추가 하지만 list는 변경이 가능하다.
for i in range(N):
    print(" ".join(L3[i]))

#######
줄인 버전 

N,M = map(int,input().split())
L1=[]
for i in range(2*N):
    a=input()
    L1.append(a.split())
for i in range(N):
    for j in range(M):
        L1[i][j]=str(int(L1[i][j])+int(L1[i+N][j]))

for i in range(N):
    print(" ".join(L1[i]))


        #append 는 추가 하지만 list는 변경이 가능하다.



###################################
#2566 행렬내의 최대 구하기
L=[]
L_max=[]
for i in range(9):
    a= list(map(int,input().split()))# 연산 없기에 str로 끝낸다.
    L.append(a)
# 행렬 만들기
for i in range(9):
    L_max.append(max(L[i]))
#index
N_num=L_max.index(max(L_max))
M_num=L[N_num].index(max(L_max))
print(max(L_max))
print(N_num+1,M_num+1)# 1을 더하는 이유는 0부터 시작이기에


#
L=[]
result=""
for i in range(5):
    a= list(input().split())
#list의 형태로 만들면 길이가
# 1인 list가 만들어진다.
    L.append(a)
for i in range(15):
    for j in range(5):
        try:
            result+=L[j][0][i]
        except IndexError:
            result+=""
print(result)
#if len(a)!=

*************************배열
#2563   색종이
arry=[[0 for _ in range(101)] for _ in range(101)]
#2차원 행렬만드는 방법
# 2차원 배열, 길이가 100이면
# 0이 되는 지점도 만들어야겠지???
a= int(input())
result=0
for i in range(a):
    x, y = list(map(int,input().split()))

    for col in range(x, x+10):
        for att in range(y,y+10):
            arry[col][att]=1
    
for i in arry:
    result+=i.count(1)
print(result)
# 반복을 잡기 어렵니?
# 반복을 잡지 말고, 결과만을 잡아봐
# 대입이 하나의 방법이야?

